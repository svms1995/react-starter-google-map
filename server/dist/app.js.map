{"version":3,"sources":["../src/app.js"],"names":["app","disable","set","path","join","__dirname","config","get","use","bodyParser","json","urlencoded","extended","express","static","routes","req","res","next","err","Error","status","locals","message","error","render","server","http","createServer","port","listen","console","log","util","getEnv"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,MAAM,wBAAZ;;AAEAA,IAAIC,OAAJ,CAAY,cAAZ,E,CAA6B;AAC7BD,IAAIE,GAAJ,CAAQ,OAAR,EAAiBC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAjB;AACAL,IAAIE,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAF,IAAIE,GAAJ,CAAQ,MAAR,EAAgBI,iBAAOC,GAAP,CAAW,UAAX,CAAhB;;AAGA;AACA;AACAP,IAAIQ,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAR,IAAIQ,GAAJ,CAAQC,qBAAWC,IAAX,EAAR;AACAV,IAAIQ,GAAJ,CAAQC,qBAAWE,UAAX,CAAsB,EAACC,UAAU,KAAX,EAAtB,CAAR;AACAZ,IAAIQ,GAAJ,CAAQ,6BAAR;AACAR,IAAIQ,GAAJ,CAAQK,kBAAQC,MAAR,CAAeX,eAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;AACAL,IAAIQ,GAAJ,CAAQ,GAAR,EAAaO,gBAAb;;AAEA;AACAf,IAAIQ,GAAJ,CAAQ,CAACQ,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC3B,OAAMC,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAZ;AACAD,KAAIE,MAAJ,GAAa,GAAb;AACAH,MAAKC,GAAL;AACA,CAJD;;AAMA;AACAnB,IAAIQ,GAAJ,CAAQ,CAACW,GAAD,EAAMH,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,KAAyB;AAChC;AACAD,KAAIK,MAAJ,CAAWC,OAAX,GAAqBJ,IAAII,OAAzB;AACAN,KAAIK,MAAJ,CAAWE,KAAX,GAAmBR,IAAIhB,GAAJ,CAAQO,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCY,GAAvC,GAA6C,EAAhE;;AAEA;AACAF,KAAII,MAAJ,CAAWF,IAAIE,MAAJ,IAAc,GAAzB;AACAJ,KAAIQ,MAAJ,CAAW,OAAX;AACA,CARD;;AAUA,MAAMC,SAASC,eAAKC,YAAL,CAAkB5B,GAAlB,CAAf;AACA,MAAM6B,OAAO7B,IAAIO,GAAJ,CAAQ,MAAR,CAAb;AACAmB,OAAOI,MAAP,CAAcD,IAAd,EAAoB,MAAM;AACzBE,SAAQC,GAAR,CAAa,4BAA2B1B,iBAAOC,GAAP,CAAW,aAAX,CAA0B,EAAlE;AACAwB,SAAQC,GAAR,CAAa,kBAAiB1B,iBAAO2B,IAAP,CAAYC,MAAZ,CAAmB,UAAnB,CAA+B,EAA7D;AACA,CAHD;;kBAKelC,G","file":"app.js","sourcesContent":["import express from 'express';\nimport logger from 'morgan';\nimport cookieParser from 'cookie-parser';\nimport bodyParser from 'body-parser';\nimport http from 'http';\nimport path from 'path';\nimport config from 'config';\nimport routes from './routes';\n\nconst app = express();\n\napp.disable('x-powered-by'); // disable x-powered-by\napp.set('views', path.join(__dirname, '../views'));\napp.set('view engine', 'ejs');\napp.set('port', config.get('app.port'));\n\n\n// uncomment after placing your favicon in /public\n// app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended: false}));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\napp.use('/', routes);\n\n// catch 404 and forward to error handler\napp.use((req, res, next) => {\n\tconst err = new Error('Not Found');\n\terr.status = 404;\n\tnext(err);\n});\n\n// error handler\napp.use((err, req, res, next) => {\n\t// set locals, only providing error in development\n\tres.locals.message = err.message;\n\tres.locals.error = req.app.get('env') === 'development' ? err : {};\n\n\t// render the error page\n\tres.status(err.status || 500);\n\tres.render('error');\n});\n\nconst server = http.createServer(app);\nconst port = app.get('port');\nserver.listen(port, () => {\n\tconsole.log(`Application listening on ${config.get('app.baseUrl')}`);\n\tconsole.log(`Environment => ${config.util.getEnv('NODE_ENV')}`);\n});\n\nexport default app;\n"]}